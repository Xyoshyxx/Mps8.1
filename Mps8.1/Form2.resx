<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4gIoSUNDX1BST0ZJTEUAAQEAAAIYAAAAAAIQAABtbnRyUkdCIFhZ
        WiAAAAAAAAAAAAAAAABhY3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlkZXNjAAAA8AAA
        AHRyWFlaAAABZAAAABRnWFlaAAABeAAAABRiWFlaAAABjAAAABRyVFJDAAABoAAAAChnVFJDAAABoAAA
        AChiVFJDAAABoAAAACh3dHB0AAAByAAAABRjcHJ0AAAB3AAAADxtbHVjAAAAAAAAAAEAAAAMZW5VUwAA
        AFgAAAAcAHMAUgBHAEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAA
        AAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z3BhcmEAAAAAAAQAAAACZmYAAPKnAAANWQAA
        E9AAAApbAAAAAAAAAABYWVogAAAAAAAA9tYAAQAAAADTLW1sdWMAAAAAAAAAAQAAAAxlblVTAAAAIAAA
        ABwARwBvAG8AZwBsAGUAIABJAG4AYwAuACAAMgAwADEANv/bAEMACAYGBwYFCAcHBwkJCAoMFA0MCwsM
        GRITDxQdGh8eHRocHCAkLicgIiwjHBwoNyksMDE0NDQfJzk9ODI8LjM0Mv/bAEMBCQkJDAsMGA0NGDIh
        HCEyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMv/AABEIA+gD
        6AMBIgACEQEDEQH/xAAcAAEAAgMBAQEAAAAAAAAAAAAABgcDBAUBAgj/xABAEAEAAQMBAQoKCgEFAQEA
        AAAAAQIDBBEFBhYhMTVUc6Gx0RIUFTRBU4KTo7ITIlFhZHGRksHhgTJCRFLwYkP/xAAaAQEAAwEBAQAA
        AAAAAAAAAAAABAUGAwIB/8QAOBEBAAEBBAYGCgICAwEAAAAAAAECAwQFERVScYGRwRQxMzRhoRITITJB
        QkNR0eEisWJjIyTw8f/aAAwDAQACEQMRAD8A/P4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        R83lDpGI3mPm8oTGndLs+aoifpaY+2aOL9GbfBsznPw6u5CHjtTjF4jrynd+3WnFLeOvKVhU5+JXTExk
        2dJ4eGuIn9Gai5RdpmbddNUcWtM6q4HanG6496iHWnFq/jSslivZVjHiZvXaKODXSqeGY+6PSrseqsbq
        y/jR5/p9qxerL+NHn+kszN02PbomMSmbtzX/AFVRpTp2oxfv3cm9Vdu1zXXVxzPpY+KXmqrvF7tbxP8A
        OfZ9vgr7e82lvP8AOdzwBFRwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAH//2Q==
</value>
  </data>
</root>